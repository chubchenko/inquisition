version: 2
references:
  restore_bundle_cache_2_4: &restore_bundle_cache_2_4
    restore_cache:
      keys:
        - inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-2.4

  save_bundle_cache_2_4: &save_bundle_cache_2_4
    save_cache:
      key: inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-2.4
      paths:
        - vendor/bundle

  restore_bundle_cache_2_5: &restore_bundle_cache_2_5
    restore_cache:
      keys:
        - inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-2.5

  save_bundle_cache_2_5: &save_bundle_cache_2_5
    save_cache:
      key: inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-2.5
      paths:
        - vendor/bundle

  restore_bundle_cache_2_6: &restore_bundle_cache_2_6
    restore_cache:
      keys:
        - inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-2.6

  save_bundle_cache_2_6: &save_bundle_cache_2_6
    save_cache:
      key: inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-2.6
      paths:
        - vendor/bundle

  restore_bundle_cache_head: &restore_bundle_cache_head
    restore_cache:
      keys:
        - inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-head

  save_bundle_cache_head: &save_bundle_cache_head
    save_cache:
      key: inquisition-{{ checksum "Gemfile" }}-{{ checksum "inquisition.gemspec" }}-ruby-head
      paths:
        - vendor/bundle

  repo_restore_cache: &repo_restore_cache
    restore_cache:
      keys:
        - repo-{{ .Environment.CIRCLE_SHA1 }}

  repo_save_cache: &repo_save_cache
    save_cache:
      key: repo-{{ .Environment.CIRCLE_SHA1 }}-{{ epoch }}
      paths:
        - ~/inquisition

  bundle_install: &bundle_install
    run:
      name: Installing gems
      command: bundle install --path vendor/bundle

  run_tests: &run_tests
    run:
      name: Running tests
      command: |
        bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
        mkdir ~/rspec
        bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
      when: always

  # install_cmake: &install_cmake
  #   run:
  #     name: Installing cmake
  #     command: sudo apt-get update && sudo apt-get install cmake

jobs:
  check_out:
    working_directory: ~/inquisition
    docker:
      - image: circleci/ruby:2.5.1-node
        environment:
          RAILS_ENV: test
    steps:
      - checkout
      - <<: *repo_save_cache
      # - <<: *install_cmake
      - <<: *bundle_install

  cc-setup:
    docker:
      - image: circleci/ruby
    steps:
      - run:
          name: Download Code Climate test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter

  ruby-2.4:
    docker:
      - image: circleci/ruby:2.4
    working_directory: ~/inquisition
    steps:
      - <<: *repo_restore_cache
      - <<: *restore_bundle_cache_2_4
      # - <<: *install_cmake
      - <<: *bundle_install
      - <<: *save_bundle_cache_2_4
      - <<: *run_tests
      - store_test_results:
          path: ~/rspec
      - attach_workspace:
          at: ~/inquisition/tmp
      - run:
          name: Code Climate Test Coverage
          command: |
            ./tmp/cc-test-reporter before-build
            COVERAGE=true bundle exec rspec
            ./tmp/cc-test-reporter format-coverage --output tmp/codeclimate.$CIRCLE_JOB.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.json"
      - persist_to_workspace:
          root: tmp
          paths:
          - codeclimate.*.json
      - store_artifacts:
          path: coverage/codeclimate.json

  ruby-2.5:
    docker:
      - image: circleci/ruby:2.5
    working_directory: ~/inquisition
    steps:
      - <<: *repo_restore_cache
      - <<: *restore_bundle_cache_2_5
      # - <<: *install_cmake
      - <<: *bundle_install
      - <<: *save_bundle_cache_2_5
      - <<: *run_tests
      - store_test_results:
          path: ~/rspec
      - attach_workspace:
          at: ~/inquisition/tmp
      - run:
          name: Code Climate Test Coverage
          command: |
            ./tmp/cc-test-reporter before-build
            COVERAGE=true bundle exec rspec
            ./tmp/cc-test-reporter format-coverage --output tmp/codeclimate.$CIRCLE_JOB.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.json"
      - persist_to_workspace:
          root: tmp
          paths:
          - codeclimate.*.json
      - store_artifacts:
          path: coverage/codeclimate.json

  ruby-2.6:
    docker:
      - image: circleci/ruby:2.6
    working_directory: ~/inquisition
    steps:
      - <<: *repo_restore_cache
      - <<: *restore_bundle_cache_2_6
      # - <<: *install_cmake
      - <<: *bundle_install
      - <<: *save_bundle_cache_2_6
      - <<: *run_tests
      - store_test_results:
          path: ~/rspec
      - attach_workspace:
          at: ~/inquisition/tmp
      - run:
          name: Code Climate Test Coverage
          command: |
            ./tmp/cc-test-reporter before-build
            COVERAGE=true bundle exec rspec
            ./tmp/cc-test-reporter format-coverage --output tmp/codeclimate.$CIRCLE_JOB.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.json"
      - persist_to_workspace:
          root: tmp
          paths:
          - codeclimate.*.json
      - store_artifacts:
          path: coverage/codeclimate.json

  ruby-head:
    docker:
      - image: circleci/ruby:latest
    working_directory: ~/inquisition
    steps:
      - <<: *repo_restore_cache
      - <<: *restore_bundle_cache_head
      # - <<: *install_cmake
      - <<: *bundle_install
      - <<: *save_bundle_cache_head
      - <<: *run_tests
      - store_test_results:
          path: ~/rspec
      - attach_workspace:
          at: ~/inquisition/tmp
      - run:
          name: Code Climate Test Coverage
          command: |
            ./tmp/cc-test-reporter before-build
            COVERAGE=true bundle exec rspec
            ./tmp/cc-test-reporter format-coverage --output tmp/codeclimate.$CIRCLE_JOB.json
            ./tmp/cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.json"
      - persist_to_workspace:
          root: tmp
          paths:
          - codeclimate.*.json
      - store_artifacts:
          path: coverage/codeclimate.json

  cc-upload:
    docker:
      - image: circleci/ruby
    working_directory: ~/inquisition
    environment:
      CC_TEST_REPORTER_ID: 83bc1e5240cc5e9d345a2f058908b137e2e0f48cfe1d67eac2b544cac129e852
    steps:
      - attach_workspace:
          at: ~/inquisition/tmp
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json --parts 4 --output tmp/codeclimate.total.json
            ./tmp/cc-test-reporter upload-coverage --input tmp/codeclimate.total.json


workflows:
  version: 2
  build:
    jobs:
      - check_out
      - cc-setup
      - ruby-2.4:
          requires:
            - check_out
            - cc-setup
      - ruby-2.5:
          requires:
            - check_out
            - cc-setup
      - ruby-2.6:
          requires:
            - check_out
            - cc-setup
      - ruby-head:
          requires:
            - check_out
            - cc-setup
      - cc-upload:
          requires:
            - ruby-2.4
            - ruby-2.5
            - ruby-2.6
            - ruby-head
