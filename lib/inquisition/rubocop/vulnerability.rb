module Inquisition
  module Rubocop
    class Vulnerability
      LEVELS = {
        refactor: :low,
        convention: :low,
        warning: :medium,
        error: :high,
        fatal: :high
      }.freeze

      DETAILED_MATCH_TABLE = {
        'Bundler/DuplicatedGem' => :duplication,
        'Bundler/InsecureProtocolSource' => :security,
        'Metrics/LineLength' => :style,
        'Migrations/RemoveIndex' => :performance,
        'Gemspec/DuplicatedAssignment' => :duplication,
        'Gemspec/OrderedDependencies' => :style
        # 'Gemspec/RequiredRubyVersion' => :change_me, ###########
        # 'Gemspec/RubyVersionGlobalsUsage' => :change_me, #########
      }.freeze

      MATCH_TABLE = {
        'Security' => :security,
        'Metrics' => :complexity,
        'Performance' => :performance
        # 'InternalAffairs' => :change_me, ######
        # 'Bundler' => :style,
        # 'Lint' => :style,
        # 'Naming' => :style,
        # 'Layout' => :style
      }.freeze

      def initialize(file, offense)
        @file = file
        @offense = offense
      end

      def to_h
        {
          severity: LEVELS[offense.severity.name],
          category: find_category(offense.cop_name),
          path: file,
          message: offense.message,
          line: offense.line
        }
      end

      private

      attr_reader :file, :offense

      def find_category(cop_name)
        return DETAILED_MATCH_TABLE[cop_name] if DETAILED_MATCH_TABLE.key?(cop_name)
        return MATCH_TABLE[cop_name.split('/').first] if MATCH_TABLE.key?(cop_name.split('/').first)

        :style
      end
    end
  end
end
